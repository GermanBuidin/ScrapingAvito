import psycopg2
import psycopg2.extras
from scraper import Scraper

connection = psycopg2.connect(
  database="postgres",
  user="postgres",
  password="Marianna+",
  host="127.0.0.1",
  port="5432"
)

print("Database opened successfully")


class ConnectDB:

    @staticmethod
    def create_table(cursor):
        cursor.execute('''CREATE TABLE IF NOT EXISTS OLD_CARS 
            (ID INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
            URL VARCHAR(255) UNIQUE NOT NULL,
            TITLE TEXT NOT NULL,
            USD_PRICE INT NOT NULL,
            MILEAGE VARCHAR(50) NOT NULL,
            USERNAME VARCHAR(50) NOT NULL,
            PHONE_NUMBER INT NOT NULL,
            IMG_URL VARCHAR(255) NOT NULL,
            IMG_TOTAL_COUNT INT2 NOT NULL,
            CAR_NUMBER VARCHAR(16),
            CAR_VIN_CODE VARCHAR(20),
            DATETIME_FOUND TIMESTAMP DEFAULT NOW() );''')

    @staticmethod
    def insert_car_info(number: 'количество страниц для поиска'):
        with connection.cursor() as cursor:
            ConnectDB.create_table(cursor)
            info = Scraper()
            car_info = info.get_information_about_cars(number)
            psycopg2.extras.execute_batch(cursor, """ 
                INSERT INTO OLD_CARS (URL, TITLE, USD_PRICE, MILEAGE, USERNAME, PHONE_NUMBER,
                IMG_TOTAL_COUNT, CAR_NUMBER, CAR_VIN_CODE, IMG_URL ) 
                VALUES (%(url)s, %(title)s, %(usd_price)s, %(mileage)s, %(username)s, %(phone_number)s,
                %(img_total_count)s, %(car_number)s, %(car_vin_code)s, %(img_url)s)
                ON CONFLICT (URL) 
                DO NOTHING
                """, car_info)
            connection.commit()
            print("Record inserted successfully")


if __name__ == '__main__':
    ConnectDB.insert_car_info(int(input('введите количество страниц поиска: ')))






